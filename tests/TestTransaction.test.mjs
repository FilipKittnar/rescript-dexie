// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Zora from "@dusty-phillips/rescript-zora/src/Zora.mjs";
import * as Zora$1 from "zora";
import * as Curry from "rescript/lib/es6/curry.js";
import * as $$Promise from "@ryyppy/rescript-promise/src/Promise.mjs";
import * as Caml_exceptions from "rescript/lib/es6/caml_exceptions.js";
import * as TestSetup$Dexie from "./TestSetup.mjs";

var MyError = /* @__PURE__ */Caml_exceptions.create("TestTransaction.MyError");

Zora$1.test("Transactions", (function (t) {
        t.test("Open transaction", (function (t) {
                var dexie = TestSetup$Dexie.setup(undefined);
                return dexie.transaction("rw", ["friends"], (function (_tx) {
                              TestSetup$Dexie.pt(TestSetup$Dexie.p(Curry._2(TestSetup$Dexie.Friend.add, dexie, {
                                            id: undefined,
                                            name: "Chris",
                                            color: "Red"
                                          }), (function (id) {
                                          return Curry._2(TestSetup$Dexie.Friend.getById, dexie, id);
                                        })), (function (result) {
                                      return Zora.optionSome(t, result, (function (t, friend) {
                                                    t.equal(friend.name, "Chris", "Friend should be added in transaction");
                                                    
                                                  }));
                                    }));
                              
                            }));
              }));
        t.test("Abort transaction", (function (t) {
                var dexie = TestSetup$Dexie.setup(undefined);
                return $$Promise.$$catch(dexie.transaction("rw", ["friends"], (function (tx) {
                                  tx.abort();
                                  
                                })), (function (error) {
                              if (error.RE_EXN_ID === $$Promise.JsError) {
                                Zora.optionSome(t, error._1.name, (function (t, name) {
                                        t.equal(name, "AbortError", "should catch abortError");
                                        
                                      }));
                              } else {
                                t.fail("Received incorrect error");
                              }
                              return Zora.done(undefined);
                            }));
              }));
        
      }));

export {
  MyError ,
  
}
/*  Not a pure module */
