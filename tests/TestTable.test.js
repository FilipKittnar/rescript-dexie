// Generated by ReScript, PLEASE EDIT WITH CARE

import * as Zora from "@dusty-phillips/rescript-zora/src/Zora.js";
import * as Table from "../src/Table.js";
import * as TestSetup from "./TestSetup.js";
import * as Caml_array from "rescript/lib/es6/caml_array.js";

function $$default(t) {
  t.test("Initialize version and upgrade", (function (t) {
          var dexie = TestSetup.setup(undefined);
          var friends = dexie.table("friends");
          t.equal(friends.name, "friends", "Table name should be `friends`");
          return TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(TestSetup.p(Table.add(friends, {
                                                                                                          id: undefined,
                                                                                                          name: "Chris",
                                                                                                          color: "Purple"
                                                                                                        }), (function (id) {
                                                                                                        t.equal(id, 1, "Id should be 1");
                                                                                                        return Table.getById(friends, 1);
                                                                                                      })), (function (result) {
                                                                                                    Zora.optionSome(t, result, (function (t, friend) {
                                                                                                            t.equal(friend.name, "Chris", "Returned friend should have same name");
                                                                                                            t.equal(friend.color, "Purple", "Returned friend should have same color");
                                                                                                            
                                                                                                          }));
                                                                                                    return Table.getByCriteria(friends, {
                                                                                                                name: "Chris"
                                                                                                              });
                                                                                                  })), (function (result) {
                                                                                                Zora.optionSome(t, result, (function (t, friend) {
                                                                                                        t.equal(friend.name, "Chris", "Returned friend should have same name");
                                                                                                        t.equal(friend.color, "Purple", "Returned friend should have same color");
                                                                                                        
                                                                                                      }));
                                                                                                return Table.getById(friends, 5);
                                                                                              })), (function (result) {
                                                                                            Zora.optionNone(t, result, "result should be none");
                                                                                            return Table.getByCriteria(friends, {
                                                                                                        name: "nobody"
                                                                                                      });
                                                                                          })), (function (result) {
                                                                                        Zora.optionNone(t, result, "result should be none");
                                                                                        return Table.bulkAdd(friends, [
                                                                                                    {
                                                                                                      id: undefined,
                                                                                                      name: "Samuel",
                                                                                                      color: "Blue"
                                                                                                    },
                                                                                                    {
                                                                                                      id: undefined,
                                                                                                      name: "Samantha",
                                                                                                      color: "Red"
                                                                                                    }
                                                                                                  ]);
                                                                                      })), (function (ids) {
                                                                                    t.equal(ids.length, 2, "Should have added two ids");
                                                                                    return Table.count(friends);
                                                                                  })), (function (count) {
                                                                                t.equal(count, 3, "Should now have three entries");
                                                                                return Table.bulkGet(friends, [
                                                                                            1,
                                                                                            2,
                                                                                            999
                                                                                          ]);
                                                                              })), (function (result) {
                                                                            t.equal(result.length, 3, "Should have retrieved two ids");
                                                                            Zora.optionSome(t, Caml_array.get(result, 0), (function (t, friend) {
                                                                                    t.equal(friend.name, "Chris", "First array result should be Chris");
                                                                                    
                                                                                  }));
                                                                            Zora.optionNone(t, Caml_array.get(result, 2), "Third result should be undefined");
                                                                            return Table.put(friends, {
                                                                                        id: 3,
                                                                                        name: "Jess",
                                                                                        color: "Red"
                                                                                      });
                                                                          })), (function (id) {
                                                                        t.equal(id, 3, "Should have updated the third friend");
                                                                        return Table.getById(friends, 3);
                                                                      })), (function (result) {
                                                                    Zora.optionSome(t, result, (function (t, friend) {
                                                                            t.equal(friend.name, "Jess", "Name should have changed");
                                                                            t.equal(friend.color, "Red", "Color should be what was set");
                                                                            
                                                                          }));
                                                                    return Table.$$delete(friends, 1);
                                                                  })), (function (param) {
                                                                return Table.count(friends);
                                                              })), (function (count) {
                                                            t.equal(count, 2, "Should now have three entries");
                                                            return Table.bulkDelete(friends, [
                                                                        2,
                                                                        3,
                                                                        99
                                                                      ]);
                                                          })), (function (param) {
                                                        return Table.count(friends);
                                                      })), (function (count) {
                                                    t.equal(count, 0, "Should have deleted remaining entries");
                                                    return Table.put(friends, {
                                                                id: undefined,
                                                                name: "Nora",
                                                                color: "Red"
                                                              });
                                                  })), (function (id) {
                                                t.equal(id, 4, "Should successfully add and increment id with put");
                                                return Table.bulkPut(friends, [
                                                            {
                                                              id: 4,
                                                              name: "Jerome",
                                                              color: "Blue"
                                                            },
                                                            {
                                                              id: undefined,
                                                              name: "Kim",
                                                              color: "Purple"
                                                            },
                                                            {
                                                              id: 8,
                                                              name: "Tyrone",
                                                              color: "Blue"
                                                            }
                                                          ]);
                                              })), (function (param) {
                                            return Table.count(friends);
                                          })), (function (count) {
                                        t.equal(count, 3, "Should have replaced one and added two entries");
                                        return Table.update(friends, 4, {
                                                    color: "Purple"
                                                  });
                                      })), (function (updated) {
                                    t.equal(updated, 1, "Should have updated one row");
                                    return Table.getById(friends, 4);
                                  })), (function (result) {
                                Zora.optionSome(t, result, (function (t, friend) {
                                        t.equal(friend.color, "Purple", "Color should have changed");
                                        
                                      }));
                                return Table.findeByCriteria(friends, {
                                            color: "Purple"
                                          });
                              })), (function (prim) {
                            return prim.toArray();
                          })), (function (result) {
                        t.equal(result.length, 2, "Should be two people in array");
                        console.log(result);
                        return Zora.done(undefined);
                      }));
        }));
  
}

export {
  $$default ,
  $$default as default,
  
}
/* TestSetup Not a pure module */
